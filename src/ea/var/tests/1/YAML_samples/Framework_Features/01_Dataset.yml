properties:
  descriptions:
    author: admin
    requirement: REQ_01
    summary: Just a basic sample.
  parameters:
  - description: ''
    name: DATASET_REMOTE
    scope: local
    type: dataset
    value: remote-tests(Common):/Samples_Framework/Tests_Example/01_testdata.tdx
  - description: ''
    name: DATASET_UNDEF
    scope: local
    type: dataset
    value: remote-tests(Common):/Sandbox/Noname1.tdx
  - description: ''
    name: PARAM
    scope: local
    type: str
    value: ''
  - description: ''
    name: TIMEOUT
    scope: local
    type: float
    value: '1.0'
testsuite: |2-

  class TESTCASE_DATASET_REMOTE01(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="result expected", description="step description", summary="step sample", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.step1.start()

          for d in input('DATASET_REMOTE').splitlines():
              self.info( d )

          self.step1.setPassed(actual="success")

  class TESTCASE_DATASET_UNDEF01(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="result expected", description="step description", summary="step sample", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.step1.start()

          for d in input('DATASET_UNDEF').splitlines():
              self.info( d )

          self.step1.setPassed(actual="success")


  TESTCASE_DATASET_REMOTE01(suffix=None).execute()
  TESTCASE_DATASET_UNDEF01(suffix=None).execute()
