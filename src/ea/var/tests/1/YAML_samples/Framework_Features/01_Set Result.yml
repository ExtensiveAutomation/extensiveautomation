properties:
  descriptions:
    author: ''
    requirement: REQ_01
    summary: ''
  parameters: []
testsuite: |2-


  class PASS(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="ok", description="set as pass", summary="set as pass", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.info( 'Result set to PASSED' )
          self.step1.start()
          self.step1.setPassed(actual="pass")

  class FAIL(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="ok", description="set as fail", summary="set as fail", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.info( 'Result set to FAILED' )
          self.step1.start()
          self.step1.setFailed(actual="fail")

  class UNDEFINED(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="ok", description="set as undef", summary="set as undef", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.info( 'Result set to UNDEFINED' )



  PASS().execute()
  #FAIL().execute()
  #UNDEFINED().execute()
