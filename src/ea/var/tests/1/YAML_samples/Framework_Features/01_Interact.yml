properties:
  descriptions:
    author: admin
    requirement: REQ_01
    summary: Just a basic sample.
  parameters:
  - description: ''
    name: DEBUG
    scope: local
    type: bool
    value: 'False'
  - description: ''
    name: TIMEOUT
    scope: local
    type: float
    value: '1.0'
testsuite: |2-

  class INTERACT_01(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="result expected", description="step description", summary="step sample", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.step1.start()

          rsp  = self.interact(ask="Name ?")
          self.info( str(rsp) )

          rsp  = self.interact(ask="Last name ?")
          self.info( str(rsp) )

          self.step1.setPassed(actual="success")

  class INTERACT_02(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="result expected", description="step description", summary="step sample", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.step1.start()

          rsp  = self.interact(ask="Name ?", timeout=5)
          self.info( str(rsp) )

          self.step1.setPassed(actual="success")
  class INTERACT_03(TestCase):
      def description(self):
          self.step1 = self.addStep(expected="result expected", description="step description", summary="step sample", enabled=True)
      def prepare(self):
          pass
      def cleanup(self, aborted):
          pass
      def definition(self):
          self.step1.start()

          rsp = self.interact(ask="hello", timeout=5.0, default="world Ã©")
          self.warning("rsp: %s" % rsp)

          self.step1.setPassed(actual="success")


  INTERACT_01(suffix=None).execute()
  INTERACT_02(suffix=None).execute()
  INTERACT_03(suffix=None).execute()
